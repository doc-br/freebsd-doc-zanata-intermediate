<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE article PUBLIC "-//FreeBSD//DTD DocBook XML V5.0-Based Extension//EN" "http://www.FreeBSD.org/XML/share/xml/freebsd50.dtd" [
<!-- local entities --><!ENTITY team.bugmeister "&os; Bugmeister Team">
<!ENTITY team.doceng "&os; Documentation Engineering Team">
<!ENTITY team.portmgr "&os; Ports Management Team">
<!ENTITY team.postmaster "&os; Postmaster Team">
<!ENTITY team.re "&os; Release Engineering Team">
<!ENTITY team.secteam "&os; Security Team">
<!ENTITY branch.head "<literal xmlns='http://docbook.org/ns/docbook'>head/</literal>">
<!ENTITY branch.stable "<literal xmlns='http://docbook.org/ns/docbook'>stable/</literal>">
<!ENTITY branch.stablex "<literal xmlns='http://docbook.org/ns/docbook'>stable/<replaceable>12</replaceable>/</literal>">
<!ENTITY branch.releng "<literal xmlns='http://docbook.org/ns/docbook'>releng/</literal>">
<!ENTITY branch.relengx "<literal xmlns='http://docbook.org/ns/docbook'>releng/<replaceable>12.0</replaceable>/</literal>">
<!ENTITY branch.releasex "<literal xmlns='http://docbook.org/ns/docbook'>release/<replaceable>12.0.0</replaceable>/</literal>">
<!ENTITY branch.revision "<replaceable xmlns='http://docbook.org/ns/docbook'>12.0</replaceable>">
<!-- Externally included files --><!ENTITY release.building SYSTEM "./releng-building.xml">
<!ENTITY release.major.version SYSTEM "./releng-major-version.xml">
<!ENTITY release.minor.version SYSTEM "./releng-minor-version.xml">
<!ENTITY release.mirrors SYSTEM "./releng-mirrors.xml">
<!ENTITY release.terminology SYSTEM "./releng-terminology.xml">
<!ENTITY release.website SYSTEM "./releng-website.xml">
]>
<article xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:its="http://www.w3.org/2005/11/its" version="5.0" xml:lang="nb_NO">

  <info>
    <title xml:lang="en">FreeBSD Release Engineering</title>

    <authorgroup>
      <author xml:lang="en">
	<personname>
	  <firstname>Glen</firstname>
	  <surname>Barber</surname>
	</personname>
	<affiliation>
	  <orgname class="nonprofit"> <link xlink:href="https://www.freebsdfoundation.org">The
	      FreeBSD Foundation</link></orgname>
	  <address xml:lang="en"><email>gjb@FreeBSD.org</email></address>
	</affiliation>
      </author>
    </authorgroup>

    <legalnotice xml:id="trademarks" role="trademarks">
      <para xml:lang="en">FreeBSD is a registered trademark of
  the FreeBSD Foundation.</para>
      <para xml:lang="en">Intel, Celeron, Centrino, Core, EtherExpress, i386,
  i486, Itanium, Pentium, and Xeon are trademarks or registered
  trademarks of Intel Corporation or its subsidiaries in the United
  States and other countries.</para>
      <para xml:lang="en">Many of the designations used by
  manufacturers and sellers to distinguish their products are claimed
  as trademarks.  Where those designations appear in this document,
  and the FreeBSD Project was aware of the trademark claim, the
  designations have been followed by the <quote>™</quote> or the
  <quote>®</quote> symbol.</para>
    </legalnotice>

    <pubdate xml:lang="en">$FreeBSD: head/en_US.ISO8859-1/articles/freebsd-releng/article.xml 52377 2018-10-18 16:11:27Z gjb $</pubdate>

    <abstract>
      <para xml:lang="en">This article describes the release engineering process of
	the FreeBSD Project.</para>
    </abstract>
  </info>

  <sect1 xml:id="introduction">
    <title xml:lang="en">Introduction to the FreeBSD Release Engineering
      Process</title>

    <para xml:lang="en">Development of FreeBSD has a very specific workflow.  In
      general, all changes to the FreeBSD base system are committed to
      the <literal>head/</literal> branch, which reflects the top of the source
      tree.</para>

    <para xml:lang="en">After a reasonable testing period, changes can then be
      merged to the <literal>stable/</literal> branches.  The default minimum
      timeframe before merging to <literal>stable/</literal> branches is three
      (3) days.</para>

    <para xml:lang="en">Although a general rule to wait a minimum of three days
      before merging from <literal>head/</literal>, there are a few special
      circumstances where an immediate merge may be necessary, such as
      a critical security fix, or a bug fix that directly inhibits the
      release build process.</para>

    <para xml:lang="en">After several months, and the number of changes in the
      <literal>stable/</literal> branch have grown significantly, it is time to
      release the next version of FreeBSD.  These releases have been
      historically referred to as <quote>point</quote>
      releases.</para>

    <para xml:lang="en">In between releases from the <literal>stable/</literal> branches,
      approximately every two (2) years, a release will be cut
      directly from <literal>head/</literal>.  These releases have been
      historically referred to as <quote>dot-zero</quote>
      releases.</para>

    <para xml:lang="en">This article will highlight the workflow and
      responsibilities of the FreeBSD Release Engineering Team for both
      <quote>dot-zero</quote> and <quote>point</quote>'
      releases.</para>

    <para xml:lang="en">The following sections of this article describe:</para>

    <variablelist>
      <varlistentry>
	<term><xref linkend="releng-prep"/></term>

	<listitem>
	  <para xml:lang="en">General information and preparation before
	    starting the release cycle.</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term><xref linkend="releng-website"/></term>

	<listitem>
	  <para xml:lang="en">Website Changes During the Release Cycle</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term><xref linkend="releng-terms"/></term>

	<listitem>
	  <para xml:lang="en">Terminology and general information, such as the
	    <quote>code slush</quote> and <quote>code
	      freeze</quote>, used throughout this document.</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term><xref linkend="releng-head"/></term>

	<listitem>
	  <para xml:lang="en">The Release Engineering process for a
	    <quote>dot-zero</quote> release.</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term><xref linkend="releng-stable"/></term>

	<listitem>
	  <para xml:lang="en">The Release Engineering process for a
	    <quote>point</quote> release.</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term><xref linkend="releng-building"/></term>

	<listitem>
	  <para xml:lang="en">Information related to the specific procedures to
	    build installation medium.</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term><xref linkend="releng-mirrors"/></term>

	<listitem>
	  <para xml:lang="en">Procedures to publish installation medium.</para>
	</listitem>
      </varlistentry>

      <varlistentry>
	<term><xref linkend="releng-wrapup"/></term>

	<listitem>
	  <para xml:lang="en">Wrapping up the release cycle.</para>
	</listitem>
      </varlistentry>
    </variablelist>
  </sect1>

  <sect1 xml:id="releng-prep">
    <title xml:lang="en">General Information and Preparation</title>

    <para xml:lang="en">Approximately two months before the start of the release
      cycle, the FreeBSD Release Engineering Team decides on a schedule for the release.
      The schedule includes the various milestone points of the
      release cycle, such as freeze dates, branch dates, and build
      dates.  For example:</para>

    <informaltable frame="none" pgwide="0">
      <tgroup cols="2">
	<thead>
	  <row>
	    <entry xml:lang="en">Milestone</entry>
	    <entry xml:lang="en">Anticipated Date</entry>
	  </row>
	</thead>

	<tbody>
	  <row>
	    <entry xml:lang="en"><literal>head/</literal> slush:</entry>
	    <entry xml:lang="en">May 27, 2016</entry>
	  </row>

	  <row>
	    <entry xml:lang="en"><literal>head/</literal> freeze:</entry>
	    <entry xml:lang="en">June 10, 2016</entry>
	  </row>

	  <row>
	    <entry xml:lang="en"><literal>head/</literal> KBI freeze:</entry>
	    <entry xml:lang="en">June 24, 2016</entry>
	  </row>

	  <row>
	    <entry xml:lang="en"><literal>doc/</literal> tree slush [1]:</entry>
	    <entry xml:lang="en">June 24, 2016</entry>
	  </row>

	  <row>
	    <entry xml:lang="en">Ports quarterly branch [2]:</entry>
	    <entry xml:lang="en">July 1, 2016</entry>
	  </row>

	  <row>
	    <entry xml:lang="en"><literal>stable/<replaceable>12</replaceable>/</literal> branch:</entry>
	    <entry xml:lang="en">July 8, 2016</entry>
	  </row>

	  <row>
	    <entry xml:lang="en"><literal>doc/</literal> tree tag [3]:</entry>
	    <entry xml:lang="en">July 8, 2016</entry>
	  </row>

	  <row>
	    <entry xml:lang="en">BETA1 build starts:</entry>
	    <entry xml:lang="en">July 8, 2016</entry>
	  </row>

	  <row>
	    <entry xml:lang="en"><literal>head/</literal> thaw:</entry>
	    <entry xml:lang="en">July 9, 2016</entry>
	  </row>

	  <row>
	    <entry xml:lang="en">BETA2 build starts:</entry>
	    <entry xml:lang="en">July 15, 2016</entry>
	  </row>

	  <row>
	    <entry xml:lang="en">BETA3 build starts [*]:</entry>
	    <entry xml:lang="en">July 22, 2016</entry>
	  </row>

	  <row>
	    <entry xml:lang="en"><literal>releng/<replaceable>12.0</replaceable>/</literal> branch:</entry>
	    <entry xml:lang="en">July 29, 2016</entry>
	  </row>

	  <row>
	    <entry xml:lang="en">RC1 build starts:</entry>
	    <entry xml:lang="en">July 29, 2016</entry>
	  </row>

	  <row>
	    <entry xml:lang="en"><literal>stable/<replaceable>12</replaceable>/</literal> thaw:</entry>
	    <entry xml:lang="en">July 30, 2016</entry>
	  </row>

	  <row>
	    <entry xml:lang="en">RC2 build starts:</entry>
	    <entry xml:lang="en">August 5, 2016</entry>
	  </row>

	  <row>
	    <entry xml:lang="en">Final Ports package builds [4]:</entry>
	    <entry xml:lang="en">August 6, 2016</entry>
	  </row>

	  <row>
	    <entry xml:lang="en">Ports release tag:</entry>
	    <entry xml:lang="en">August 12, 2016</entry>
	  </row>

	  <row>
	    <entry xml:lang="en">RC3 build starts [*]:</entry>
	    <entry xml:lang="en">August 12, 2016</entry>
	  </row>

	  <row>
	    <entry xml:lang="en">RELEASE build starts:</entry>
	    <entry xml:lang="en">August 19, 2016</entry>
	  </row>

	  <row>
	    <entry xml:lang="en">RELEASE announcement:</entry>
	    <entry xml:lang="en">September 2, 2016</entry>
	  </row>
	</tbody>
      </tgroup>
    </informaltable>

    <note>
      <para xml:lang="en">Items marked with "[*]" are "as
	needed".</para>
    </note>

    <orderedlist>
      <listitem>
	<para xml:lang="en">The <literal>doc/</literal> tree slush is coordinated by
	  the FreeBSD Documentation Engineering Team.</para>
      </listitem>

      <listitem>
	<para xml:lang="en">The Ports quarterly branch used is determined by when
	  the final <literal>RC</literal> build is planned.  A new
	  quarterly branch is created on the first day of the quarter,
	  so this metric should be used when taking the release cycle
	  milestones into account.  The quarterly branch is created by
	  the FreeBSD Ports Management Team.</para>
      </listitem>

      <listitem>
	<para xml:lang="en">The <literal>doc/</literal> tree is tagged by the
	  FreeBSD Documentation Engineering Team.</para>
      </listitem>

      <listitem>
	<para xml:lang="en">The final Ports package build is done by the
	  FreeBSD Ports Management Team after the final (or what is expected to be
	  final) <literal>RC</literal> build.</para>
      </listitem>
    </orderedlist>

    <note>
      <para xml:lang="en">If the release is being created from an existing
	<literal>stable/</literal> branch, the <acronym>KBI</acronym>
	freeze date can be excluded, since the <acronym>KBI</acronym>
	is already considered frozen on established
	<literal>stable/</literal> branches.</para>
    </note>

    <para xml:lang="en">When writing the release cycle schedule, a number of things
      need to be taken into consideration, in particular milestones
      where the target date depends on predefined milestones upon
      which there is a dependency.  For example, the Ports Collection
      release tag originates from the active quarterly branch at the
      time of the last <literal>RC</literal>.  This in part defines
      which quarterly branch is used, when the release tag can happen,
      and what revision of the ports tree is used for the final
      <literal>RELEASE</literal> build.</para>

    <para xml:lang="en">After general agreement on the schedule, the FreeBSD Release Engineering Team
      emails the schedule to the FreeBSD Developers.</para>

    <para xml:lang="en">It is somewhat typical that many developers will inform
      the FreeBSD Release Engineering Team about various works-in-progress.  In some cases,
      an extension for the in-progress work will be requested, and
      in other cases, a request for <quote>blanket approval</quote>
      to a particular subset of the tree will be made.</para>

    <para xml:lang="en">When such requests are made, it is important to make sure
      timelines (even if estimated) are discussed.  For blanket
      approvals, the length of time for the blanket approval should
      be made clear.  For example, a FreeBSD developer may request
      blanket approvals from the start of the code slush until the
      start of the <literal>RC</literal> builds.</para>

    <note>
      <para xml:lang="en">In order to keep track of blanket approvals, the FreeBSD Release Engineering Team
	uses an internal repository to keep a running log of such
	requests, which defines the area upon which a blanket approval
	was granted, the author(s), when the blanket approval expires,
	and the reason the approval was granted.  One example of this
	is granting blanket approval to <filename class="directory">release/doc/</filename> to all FreeBSD Release Engineering Team
	members until the final <literal>RC</literal> to update the
	release notes and other release-related documentation.</para>
    </note>

    <note>
      <para xml:lang="en">The FreeBSD Release Engineering Team also uses this repository to track pending
	approval requests that are received just prior to starting
	various builds during the release cycle, which the Release
	Engineer specifies the cutoff period with an email to the FreeBSD
	developers.</para>
    </note>

    <para xml:lang="en">Depending on the underlying set of code in question, and
      the overall impact the set of code has on FreeBSD as a whole, such
      requests may be approved or denied by the FreeBSD Release Engineering Team.</para>

    <para xml:lang="en">The same applies to work-in-progress extensions.  For
      example, in-progress work for a new device driver that is
      otherwise isolated from the rest of the tree may be granted
      an extension.  A new scheduler, however, may not be feasible,
      especially if such dramatic changes do not exist in another
      branch.</para>

    <para xml:lang="en">The schedule is also added to the Project website, in the
      <literal>doc/</literal> repository, in
      <filename>head/en_US.ISO8859-1/htdocs/releases/<replaceable>12.0</replaceable>R/schedule.xml</filename>.
      This file is continuously updated as the release cycle
      progresses.</para>

    <note>
      <para xml:lang="en">In most cases, the <filename>schedule.xml</filename> can
	be copied from a prior release and updated accordingly.</para>
    </note>

    <para xml:lang="en">In addition to adding <filename>schedule.xml</filename> to
      the website, <filename>head/share/xml/navibar.ent</filename> and
      <filename>head/share/xml/release.ent</filename> are also updated
      to add the link to the schedule to various subpages, as well as
      enabling the link to the schedule on the Project website index
      page.</para>

    <para xml:lang="en">The schedule is also linked from
      <filename>head/en_US.ISO8859-1/htdocs/releng/index.xml</filename>.</para>

    <para xml:lang="en">Approximately one month prior to the scheduled <quote>code
	slush</quote>, the FreeBSD Release Engineering Team sends a reminder email to the
      FreeBSD Developers.</para>

    <para xml:lang="en">Once the first builds of the release cycle are available,
      update the <literal>beta.local.where</literal> entity in
      <filename>head/en_US.ISO8859-1/htdocs/releases/<replaceable>12.0</replaceable>R/schedule.xml</filename>.
      replacing <literal>IGNORE</literal> with
      <literal>INCLUDE</literal>.</para>

    <note>
      <para xml:lang="en">If two parallel release cycles are happening at once, the
	<literal>beta2.local.where</literal> entity may be used
	instead.</para>
    </note>
  </sect1>

  
<!--
     The FreeBSD Documentation Project

     $FreeBSD: head/en_US.ISO8859-1/articles/freebsd-releng/releng-terminology.xml 50159 2017-04-13 17:28:05Z gjb $
-->
<sect1 xml:id="releng-terms">
  <title xml:lang="en">Release Engineering Terminology</title>

  <para xml:lang="en">This section describes some of the terminology used throughout
    the rest of this document.</para>

  <sect2 xml:id="releng-terms-code-slush">
    <title xml:lang="en">The Code Slush</title>

    <para xml:lang="en">Although the code slush is not a hard freeze on the tree,
      the FreeBSD Release Engineering Team requests that bugs in the existing code base take
      priority over new features.</para>

    <para xml:lang="en">The code slush does not enforce commit approvals to the
      branch.</para>
  </sect2>

  <sect2 xml:id="releng-terms-code-freeze">
    <title xml:lang="en">The Code Freeze</title>

    <para xml:lang="en">The code freeze marks the point in time where all commits to
      the branch require explicit approval from the FreeBSD Release Engineering Team.</para>

    <para xml:lang="en">The FreeBSD <application>Subversion</application> repository
      contains several hooks to perform sanity checks before any
      commit is actually committed to the tree.  One of these hooks
      will evaluate if committing to a particular branch requires
      specific approval.</para>

    <para xml:lang="en">To enforce commit approvals by the FreeBSD Release Engineering Team, the Release
      Engineer updates
      <filename>base/svnadmin/conf/approvers</filename>, and commits
      the change back to the repository.  Once this is done, any
      change to the branch must include an <quote>Approved by:</quote>
      line in the commit message.</para>

    <para xml:lang="en">The <quote>Approved by:</quote> line must match the second
      column in <filename>base/svnadmin/conf/approvers</filename>,
      otherwise the commit will be rejected by the repository
      hooks.</para>

    <note>
      <para xml:lang="en">During the code freeze, FreeBSD committers are urged to
	follow the <link xlink:href="https://wiki.freebsd.org/Releng/ChangeRequestGuidelines">Change
	  Request Guidelines</link>.</para>
    </note>
  </sect2>

  <sect2 xml:id="releng-terms-kbi-freeze">
    <title xml:lang="en">The <acronym>KBI</acronym>/<acronym>KPI</acronym>
      Freeze</title>

    <para xml:lang="en"><acronym>KBI</acronym>/<acronym>KPI</acronym> stability
      implies that the caller of a function across two different
      releases of software that implement the function results in the
      same end state.  The caller, whether it is a process, thread, or
      function, expects the function to operate in a certain way,
      otherwise the <acronym>KBI</acronym>/<acronym>KPI</acronym>
      stability on the branch is broken.</para>
  </sect2>
</sect1>

  
<!--
     The FreeBSD Documentation Project

     $FreeBSD: head/en_US.ISO8859-1/articles/freebsd-releng/releng-website.xml 52377 2018-10-18 16:11:27Z gjb $
-->
<sect1 xml:id="releng-website">
  <title xml:lang="en">Website Changes During the Release Cycle</title>

  <para xml:lang="en">This section describes the changes to the website that should
    occur as the release cycle progresses.</para>

  <note>
    <para xml:lang="en">The files specified throughout this section are relative to
      the <literal>head/</literal> branch of the
      <literal>doc</literal> repository in
      <application>Subversion</application>.</para>
  </note>

  <sect2 xml:id="releng-website-prerelease">
    <title xml:lang="en">Website Changes Before the Release Cycle Begins</title>

    <para xml:lang="en">When the release cycle schedule is available, these files
      need to be updated to enable various different functionalities
      on the FreeBSD Project website:</para>

    <informaltable frame="none" pgwide="0">
      <tgroup cols="2">
	<thead>
	  <row>
	    <entry xml:lang="en">File to Edit</entry>
	    <entry xml:lang="en">What to Change</entry>
	  </row>
	</thead>

	<tbody>
	  <row>
	    <entry xml:lang="en"><filename>share/xml/release.ent</filename></entry>
	    <entry xml:lang="en">Change <literal>beta.upcoming</literal>
	      from <literal>IGNORE</literal> to
	      <literal>INCLUDE</literal></entry>
	  </row>

	  <row>
	    <entry xml:lang="en"><filename>share/xml/release.ent</filename></entry>
	    <entry xml:lang="en">Change <literal>% beta.upcoming</literal>
	      from <literal>IGNORE</literal> to
	      <literal>INCLUDE</literal></entry>
	  </row>

	  <row>
	    <entry xml:lang="en"><filename>share/xml/release.ent</filename></entry>
	    <entry xml:lang="en">Change <literal>beta.testing</literal>
	      from <literal>IGNORE</literal> to
	      <literal>INCLUDE</literal></entry>
	  </row>

	  <row>
	    <entry xml:lang="en"><filename>share/xml/release.ent</filename></entry>
	    <entry xml:lang="en">Change <literal>% beta.testing</literal>
	      from <literal>IGNORE</literal> to
	      <literal>INCLUDE</literal></entry>
	  </row>
	</tbody>
      </tgroup>
    </informaltable>
  </sect2>

  <sect2 xml:id="releng-website-beta-rc">
    <title xml:lang="en">Website Changes During <literal>BETA</literal> or
      <literal>RC</literal></title>

    <para xml:lang="en">When transitioning from <literal>PRERELEASE</literal> to
      <literal>BETA</literal>, these files need to be updated to
      enable the "Help Test" block on the download page.
      All files are relative to <filename class="directory">head/</filename> in the
      <literal>doc</literal> repository:</para>

    <informaltable frame="none" pgwide="0">
      <tgroup cols="2">
	<thead>
	  <row>
	    <entry xml:lang="en">File to Edit</entry>
	    <entry xml:lang="en">What to Change</entry>
	  </row>
	</thead>

	<tbody>
	  <row>
	    <entry xml:lang="en"><filename>en_US.ISO8859-1/htdocs/releases/12.0R/schedule.xml</filename></entry>
	    <entry xml:lang="en">Change <literal>% beta.local.where</literal>
	      <literal>IGNORE</literal> to
	      <literal>INCLUDE</literal></entry>
	  </row>

	  <row>
	    <entry xml:lang="en"><filename>share/xml/release.ent</filename></entry>
	    <entry xml:lang="en">Update <literal>% betarel.vers</literal> to
	      <literal>BETA<replaceable>1</replaceable></literal></entry>
	  </row>

	  <row>
	    <entry xml:lang="en"><filename>share/xml/news.xml</filename></entry>
	    <entry xml:lang="en">Add an entry announcing the
	      <literal>BETA</literal></entry>
	  </row>
	</tbody>
      </tgroup>
    </informaltable>

    <para xml:lang="en">Once the <literal>releng/<replaceable>12.0</replaceable>/</literal> branch is created, the various
      release-related documents need to be generated and manually
      added to the <literal>doc/</literal> repository.</para>

    <para xml:lang="en">Within <filename class="directory">release/doc</filename>,
      invoke <citerefentry><refentrytitle>make</refentrytitle><manvolnum>1</manvolnum></citerefentry> to generate
      <filename>errata.html</filename>,
      <filename>hardware.html</filename>,
      <filename>readme.html</filename>, and
      <filename>relnotes.html</filename> pages, which are then added
      to <filename class="directory">doc/head/en_US.ISO8859-1/htdocs/releases/<replaceable>X.Y</replaceable>R/</filename>,
      where <replaceable>X.Y</replaceable> represents the major and
      minor version number of the release.</para>

    <para xml:lang="en">The <literal>fbsd:nokeywords</literal> must be set to
      <literal>on</literal> on the newly-added files before the
      pre-commit hooks will allow them to be added to the
      repository.</para>
  </sect2>

  <sect2 xml:id="releng-ports-beta-rc">
    <title xml:lang="en">Ports Changes During <literal>BETA</literal>,
      <literal>RC</literal>, and the Final
      <literal>RELEASE</literal></title>

    <para xml:lang="en">For each build during the release cycle, the
      <literal>MANIFEST</literal> files containing the
      <literal>SHA256</literal> of the various distribution sets, such
      as <literal>base.txz</literal>, <literal>kernel.txz</literal>,
      and so on, are added to the
      <package>misc/freebsd-release-manifests</package> port.  This
      allows utilities other than <citerefentry><refentrytitle>bsdinstall</refentrytitle><manvolnum>8</manvolnum></citerefentry>, such as
      <package>ports-mgmt/poudriere</package>, to safely use these
      distribution sets by providing a mechanism through which the
      checksums can be verified.</para>
  </sect2>
</sect1>

  
<!--
     The FreeBSD Documentation Project

     $FreeBSD: head/en_US.ISO8859-1/articles/freebsd-releng/releng-major-version.xml 52499 2018-11-19 15:36:11Z gjb $
-->
<sect1 xml:id="releng-head">
  <title xml:lang="en">Release from <literal>head/</literal></title>


  <para xml:lang="en">This section describes the general procedures of the FreeBSD
    release cycle from the <literal>head/</literal> branch.</para>

  <sect2 xml:id="releng-head-builds-alpha">
    <title xml:lang="en">FreeBSD <quote><literal>ALPHA</literal></quote> Builds</title>

    <para xml:lang="en">Starting with the FreeBSD 10.0-RELEASE cycle, the notion
      of <quote><literal>ALPHA</literal></quote> builds was
      introduced.  Unlike the <literal>BETA</literal> and
      <literal>RC</literal> builds, <literal>ALPHA</literal> builds
      are not included in the FreeBSD Release schedule.</para>

    <para xml:lang="en">The idea behind <literal>ALPHA</literal> builds is to
      provide regular FreeBSD-provided builds before the creation of the
      <literal>stable/</literal> branch.</para>

    <para xml:lang="en">FreeBSD <literal>ALPHA</literal> snapshots should be built
      approximately once a week.</para>

    <para xml:lang="en">For the first <literal>ALPHA</literal> build, the
      <varname>BRANCH</varname> value in
      <filename>sys/conf/newvers.sh</filename> needs to be changed
      from <literal>CURRENT</literal> to <literal>ALPHA1</literal>.
      For subsequent <literal>ALPHA</literal> builds, increment each
      <literal>ALPHA<replaceable>N</replaceable></literal> value by
      one.</para>

    <para xml:lang="en">See <xref linkend="releng-building"/> for information on
      building the <literal>ALPHA</literal> images.</para>
  </sect2>

  <sect2 xml:id="releng-head-branching">
    <title xml:lang="en">Creating the <literal>stable/<replaceable>12</replaceable>/</literal> Branch</title>

    <para xml:lang="en">When creating the <literal>stable/</literal> branch, several changes
      are required in both the new <literal>stable/</literal> branch and the
      <literal>head/</literal> branch.  The files listed are relative to the
      repository root.  To create the new <literal>stable/<replaceable>12</replaceable>/</literal> branch
      in Subversion:</para>

    <screen xml:lang="en"><prompt>%</prompt> <userinput>svn cp ^/head <literal>stable/<replaceable>12</replaceable>/</literal></userinput></screen>

    <para xml:lang="en">Once the <literal>stable/<replaceable>12</replaceable>/</literal> branch has been committed, make
      the following edits:</para>

    <informaltable frame="none" pgwide="0">
      <tgroup cols="2">
	<thead>
	  <row>
	    <entry xml:lang="en">File to Edit</entry>
	    <entry xml:lang="en">What to Change</entry>
	  </row>
	</thead>

	<tbody>
	  <row>
	    <entry xml:lang="en"><filename>stable/<replaceable>12</replaceable>/UPDATING</filename></entry>
	    <entry xml:lang="en">Update the FreeBSD version, and remove the notice
	      about <literal>WITNESS</literal></entry>
	  </row>

	  <row>
	    <entry xml:lang="en"><filename>stable/<replaceable>12</replaceable>/contrib/jemalloc/include/jemalloc/jemalloc_FreeBSD.h</filename></entry>
	    <entry><screen xml:lang="en">#ifndef MALLOC_PRODUCTION
#define MALLOC_PRODUCTION
#endif</screen></entry>
	  </row>

	  <row>
	    <entry xml:lang="en"><filename>stable/<replaceable>12</replaceable>/lib/clang/llvm.build.mk</filename></entry>
	    <entry xml:lang="en">Uncomment <literal>-DNDEBUG</literal></entry>
	  </row>

	  <row>
	    <entry xml:lang="en"><filename>stable/<replaceable>12</replaceable>/sys/*/conf/GENERIC*</filename></entry>
	    <entry xml:lang="en">Remove debugging support</entry>
	  </row>

	  <row>
	    <entry xml:lang="en"><filename>stable/<replaceable>12</replaceable>/sys/*/conf/MINIMAL</filename></entry>
	    <entry xml:lang="en">Remove debugging support</entry>
	  </row>

	  <row>
	    <entry xml:lang="en"><filename>stable/<replaceable>12</replaceable>/release/release.conf.sample</filename></entry>
	    <entry xml:lang="en">Update <varname>SRCBRANCH</varname></entry>
	  </row>

	  <row>
	    <entry xml:lang="en"><filename>stable/<replaceable>12</replaceable>/sys/*/conf/GENERIC-NODEBUG</filename></entry>
	    <entry xml:lang="en">Remove these kernel configurations</entry>
	  </row>

	  <row>
	    <entry xml:lang="en"><filename>stable/<replaceable>12</replaceable>/sys/arm/conf/std.arm*</filename></entry>
	    <entry xml:lang="en">Remove debugging options</entry>
	  </row>

	  <row>
	    <entry xml:lang="en"><filename>stable/<replaceable>12</replaceable>/sys/conf/newvers.sh</filename></entry>
	    <entry xml:lang="en">Update the <varname>BRANCH</varname> value to
	      reflect <literal>BETA1</literal></entry>
	  </row>

	  <row>
	    <entry xml:lang="en"><filename>stable/<replaceable>12</replaceable>/libexec/rc/rc.conf</filename></entry>
	    <entry xml:lang="en">Set <literal>dumpdev</literal> from
	      <literal>AUTO</literal> to <literal>NO</literal> (it is
	      configurable via <citerefentry><refentrytitle>bsdinstall</refentrytitle><manvolnum>8</manvolnum></citerefentry> for those that want
	      it enabled by default)</entry>
	  </row>

	  <row>
	    <entry xml:lang="en"><filename>stable/<replaceable>12</replaceable>/release/Makefile</filename></entry>
	    <entry xml:lang="en">Remove the
	      <literal>debug.witness.trace</literal> entries</entry>
	  </row>
	</tbody>
      </tgroup>
    </informaltable>

    <para xml:lang="en">Then in the <literal>head/</literal> branch, which will now become
      a new major version:</para>

    <informaltable frame="none" pgwide="0">
      <tgroup cols="2">
	<thead>
	  <row>
	    <entry xml:lang="en">File to Edit</entry>
	    <entry xml:lang="en">What to Change</entry>
	  </row>
	</thead>

	<tbody>
	  <row>
	    <entry xml:lang="en"><filename>head/UPDATING</filename></entry>
	    <entry xml:lang="en">Update the FreeBSD version</entry>
	  </row>

	  <row>
	    <entry xml:lang="en"><filename>head/sys/conf/newvers.sh</filename></entry>
	    <entry xml:lang="en">Update the <varname>BRANCH</varname> value to
	      reflect <literal>CURRENT</literal>, and increment
	      <literal>REVISION</literal></entry>
	  </row>

	  <row>
	    <entry xml:lang="en"><filename>head/Makefile.inc1</filename></entry>
	    <entry xml:lang="en">Update <literal>TARGET_TRIPLE</literal> and
	      <literal>MACHINE_TRIPLE</literal></entry>
	  </row>

	  <row>
	    <entry xml:lang="en"><filename>head/sys/sys/param.h</filename></entry>
	    <entry xml:lang="en">Update <literal>__FreeBSD_version</literal></entry>
	  </row>

	  <row>
	    <entry xml:lang="en"><filename>head/gnu/usr.bin/cc/cc_tools/freebsd-native.h</filename></entry>
	    <entry xml:lang="en">Update <literal>FBSD_MAJOR</literal> and
	      <literal>FBSD_CC_VER</literal></entry>
	  </row>

	  <row>
	    <entry xml:lang="en"><filename>head/contrib/gcc/config.gcc</filename></entry>
	    <entry xml:lang="en">Append the
	      <literal>freebsd&lt;version&gt;.h</literal>
	      section</entry>
	  </row>

	  <row>
	    <entry xml:lang="en"><filename>head/lib/clang/llvm.build.mk</filename></entry>
	    <entry xml:lang="en">Update the value of
	      <literal>OS_VERSION</literal></entry>
	  </row>

	  <?ignore <row>
	    <entry><filename>head/release/doc/en_US.ISO8859-1/readme/article.xml</filename></entry>
	    <entry>Replace &amp;a.current; with &amp;a.stable;</entry>
	  </row>

	  ?>

	  <?ignore <row>
	    <entry><filename>head/release/doc/share/xml/release.ent</filename></entry>
	    <entry></entry>
	  </row>

	  ?>

	  <row>
	    <entry xml:lang="en"><filename>head/lib/clang/freebsd_cc_version.h</filename></entry>
	    <entry xml:lang="en">Update
	      <literal>FREEBSD_CC_VERSION</literal></entry>
	  </row>

	  <row>
	    <entry xml:lang="en"><filename>head/lib/clang/include/lld/Common/Version.inc</filename></entry>
	    <entry xml:lang="en">Update
	      <literal>LLD_REVISION_STRING</literal></entry>
	  </row>

	  <row>
	    <entry xml:lang="en"><filename>head/Makefile.libcompat</filename></entry>
	    <entry xml:lang="en">Update <literal>LILB32CPUFLAGS</literal></entry>
	  </row>
	</tbody>
      </tgroup>
    </informaltable>
  </sect2>
</sect1>

  
<!--
     The FreeBSD Documentation Project

     $FreeBSD: head/en_US.ISO8859-1/articles/freebsd-releng/releng-minor-version.xml 52976 2019-05-02 18:21:27Z gjb $
-->
<sect1 xml:id="releng-stable">
  <title xml:lang="en">Release from <literal>stable/</literal></title>

  <para xml:lang="en">This section describes the general procedures of the FreeBSD
    release cycle from an extablished <literal>stable/</literal> branch.</para>

  <sect2 xml:id="releng-stable-slush">
    <title xml:lang="en">FreeBSD <literal>stable</literal> Branch Code Slush</title>

    <para xml:lang="en">In preparation for the code freeze on
      a <literal>stable</literal> branch, several files need to be
      updated to reflect the release cycle is officially in
      progress.  These files are all relative to the top-most level of
      the stable branch:</para>

    <informaltable frame="none" pgwide="0">
      <tgroup cols="2">
	<thead>
	  <row>
	    <entry xml:lang="en">File to Edit</entry>
	    <entry xml:lang="en">What to Change</entry>
	  </row>
	</thead>

	<tbody>
	  <row>
	    <entry xml:lang="en"><filename>sys/conf/newvers.sh</filename></entry>
	    <entry xml:lang="en">Update the <varname>BRANCH</varname> value to
	      reflect <literal>PRERELEASE</literal></entry>
	  </row>

	  <row>
	    <entry xml:lang="en"><filename>Makefile.inc1</filename></entry>
	    <entry xml:lang="en">Update <varname>TARGET_TRIPLE</varname></entry>
	  </row>

	  <row>
	    <entry xml:lang="en"><filename>lib/clang/llvm.build.mk</filename></entry>
	    <entry xml:lang="en">Update <varname>OS_VERSION</varname></entry>
	  </row>

	  <row>
	    <entry xml:lang="en"><filename>gnu/usr.bin/groff/tmac/mdoc.local.in</filename></entry>
	    <entry xml:lang="en">Add a new <literal>.ds</literal> entry for the FreeBSD
	      version, and update
	      <varname>doc-default-operating-system</varname>
	      (FreeBSD 11.x and earlier only)</entry>
	  </row>
	</tbody>
      </tgroup>
    </informaltable>

    <para xml:lang="en">In the <literal>doc</literal> repository, also update
      <filename>head/en_US.ISO8859-1/htdocs/releases/<replaceable>12.0</replaceable>R/Makefile.hardware</filename>,
      switching the value of <varname>_BRANCH</varname> to
      <literal>BETA<replaceable>X</replaceable></literal>,
      <literal>RC<replaceable>X</replaceable></literal>, or
      <literal>RELEASE</literal>, respectively.</para>

  </sect2>

  <sect2 xml:id="releng-stable-builds-beta">
    <title xml:lang="en">FreeBSD <literal>BETA</literal> Builds</title>

    <para xml:lang="en">Following the code slush, the next phase of the release
      cycle is the code freeze.  This is the point at which all
      commits to the stable branch require explicit approval from
      the FreeBSD Release Engineering Team.  This is enforced by pre-commit hooks in the
      Subversion repository by editing
      <filename>base/svnadmin/conf/approvers</filename> to include
      a regular expression matching the <literal>stable/<replaceable>12</replaceable>/</literal> branch for
      the release:</para>

    <programlisting xml:lang="en">^/<literal>stable/<replaceable>12</replaceable>/</literal>	re
^/<literal>releng/<replaceable>12.0</replaceable>/</literal>	re</programlisting>

    <note>
      <para xml:lang="en">There are two general exceptions to requiring commit
	approval during the release cycle.  The first is any change
	that needs to be committed by the Release Engineer in order
	to proceed with the day-to-day workflow of the release cycle,
	the other is security fixes that may occur during the release
	cycle.</para>
    </note>

    <para xml:lang="en">Once the code freeze is in effect, the next build from the
      branch is labeled <literal>BETA1</literal>.  This is done by
      updating the <varname>BRANCH</varname> value in
      <filename>sys/conf/newvers.sh</filename> from
      <literal>PRERELEASE</literal> to
      <literal>BETA1</literal>.</para>

    <para xml:lang="en">Once this is done, the first set of <literal>BETA</literal>
      builds are started.  Subsequent <literal>BETA</literal> builds
      do not require updates to any files other than
      <filename>sys/conf/newvers.sh</filename>, incrementing the
      <literal>BETA</literal> build number.</para>
  </sect2>

  <sect2 xml:id="releng-stable-branching">
    <title xml:lang="en">Creating the <literal>releng/<replaceable>12.0</replaceable>/</literal> Branch</title>

    <para xml:lang="en">When the first <literal>RC</literal> (Release Candidate)
      build is ready to begin, the <literal>releng/</literal> branch is created.
      This is a multi-step process that must be done in a specific
      order, in order to avoid anomalies such as overlaps with
      <varname>__FreeBSD_version</varname> values, for example.  The
      paths listed below are relative to the repository root.  The
      order of commits and what to change are:</para>

    <screen xml:lang="en"><prompt>%</prompt> <userinput>svn cp ^/<literal>stable/<replaceable>12</replaceable>/</literal> <literal>releng/<replaceable>12.0</replaceable>/</literal></userinput></screen>

    <informaltable frame="none" pgwide="0">
      <tgroup cols="2">
	<thead>
	  <row>
	    <entry xml:lang="en">File to Edit</entry>
	    <entry xml:lang="en">What to Change</entry>
	  </row>
	</thead>

	<tbody>
	  <row>
	    <entry xml:lang="en"><filename>releng/<replaceable>12.0</replaceable>/sys/conf/newvers.sh</filename></entry>
	    <entry xml:lang="en">Change
	      <literal>BETA<replaceable>X</replaceable></literal>
	      to <literal>RC1</literal></entry>
	  </row>

	  <row>
	    <entry xml:lang="en"><filename>releng/<replaceable>12.0</replaceable>/sys/sys/param.h</filename></entry>
	    <entry xml:lang="en">Update <varname>__FreeBSD_version</varname></entry>
	  </row>

	  <row>
	    <entry xml:lang="en"><filename>releng/<replaceable>12.0</replaceable>/etc/pkg/FreeBSD.conf</filename></entry>
	    <entry xml:lang="en">Replace <literal>latest</literal> with
	      <literal>quarterly</literal> as the default package
	      repository location</entry>
	  </row>

	  <row>
	    <entry xml:lang="en"><filename>releng/<replaceable>12.0</replaceable>/release/pkg_repos/release-dvd.conf</filename></entry>
	    <entry xml:lang="en">Replace <literal>latest</literal> with
	      <literal>quarterly</literal> as the default package
	      repository location</entry>
	  </row>

	  <row>
	    <entry xml:lang="en"><filename>stable/<replaceable>12</replaceable>/sys/conf/newvers.sh</filename></entry>
	    <entry xml:lang="en">Update
	      <literal>BETA<replaceable>X</replaceable></literal> with
	      <literal>PRERELEASE</literal></entry>
	  </row>

	  <row>
	    <entry xml:lang="en"><filename>stable/<replaceable>12</replaceable>/sys/sys/param.h</filename></entry>
	    <entry xml:lang="en">Update <varname>__FreeBSD_version</varname></entry>
	  </row>

	  <row>
	    <entry xml:lang="en"><filename>svnadmin/conf/approvers</filename></entry>
	    <entry xml:lang="en">Add a new approvers line for the releng
	      branch as was done for the stable branch</entry>
	  </row>
	</tbody>
      </tgroup>
    </informaltable>

    <screen xml:lang="en"><prompt>%</prompt> <userinput>svn propdel -R svn:mergeinfo <literal>releng/<replaceable>12.0</replaceable>/</literal></userinput>
<prompt>%</prompt> <userinput>svn commit <literal>releng/<replaceable>12.0</replaceable>/</literal></userinput>
<prompt>%</prompt> <userinput>svn commit <literal>stable/<replaceable>12</replaceable>/</literal></userinput></screen>

    <para xml:lang="en">Now that two new <varname>__FreeBSD_version</varname> values
      exist, also update
      <filename>head/en_US.ISO8859-1/books/porters-handbook/versions/chapter.xml</filename>
      in the Documentation Project repository.</para>

    <para xml:lang="en">After the first <literal>RC</literal> build has completed
      and tested, the <literal>stable/</literal> branch can be
      <quote>thawed</quote> by removing (or commenting) the
      ^/<literal>stable/<replaceable>12</replaceable>/</literal> entry in
      <filename>svnadmin/conf/approvers</filename>.</para>

    <para xml:lang="en">Following the availability of the first
      <literal>RC</literal>, FreeBSD Bugmeister Team should be emailed to
      add the new FreeBSD <literal>-RELEASE</literal> to the
      <literal>versions</literal> available in the drop-down menu
      shown in the bug tracker.</para>
  </sect2>
</sect1>

  
<!--
     The FreeBSD Documentation Project

     $FreeBSD: head/en_US.ISO8859-1/articles/freebsd-releng/releng-building.xml 52377 2018-10-18 16:11:27Z gjb $
-->
<sect1 xml:id="releng-building">
  <title xml:lang="en">Building FreeBSD Installation Media</title>

  <para xml:lang="en">This section describes the general procedures producing FreeBSD
    development snapshots and releases.</para>

  <sect2 xml:id="releng-build-scripts">
    <title xml:lang="en">Release Build Scripts</title>

    <para xml:lang="en">This section describes the build scripts used by FreeBSD Release Engineering Team
      to produce development snapshots and releases.</para>

    <sect3 xml:id="releng-build-scripts-single">
      <title xml:lang="en">The <filename>release.sh</filename> Script</title>

      <para xml:lang="en">Prior to FreeBSD 9.0-RELEASE,
	<filename>src/release/Makefile</filename> was updated to
	support <citerefentry><refentrytitle>bsdinstall</refentrytitle><manvolnum>8</manvolnum></citerefentry>, and the
	<filename>src/release/generate-release.sh</filename> script
	was introduced as a wrapper to automate invoking the
	<citerefentry><refentrytitle>release</refentrytitle><manvolnum>7</manvolnum></citerefentry> targets.</para>

      <para xml:lang="en">Prior to FreeBSD 9.2-RELEASE,
	<filename>src/release/release.sh</filename> was introduced,
	which heavily based on
	<filename>src/release/generate-release.sh</filename> included
	support to specify configuration files to override various
	options and environment variables.  Support for configuration
	files provided support for cross building each architecture
	for a release by specifying a separate configuration file for
	each invocation.</para>

      <para xml:lang="en">As a brief example of using
	<filename>src/release/release.sh</filename> to build a single
	release in <filename class="directory">/scratch</filename>:</para>

      <screen xml:lang="en"><prompt>#</prompt> <userinput>/bin/sh /usr/src/release/release.sh</userinput></screen>

      <para xml:lang="en">As a brief example of using
	<filename>src/release/release.sh</filename> to build a single,
	cross-built release using a different target directory, create
	a custom <filename>release.conf</filename> containing:</para>

      <programlisting xml:lang="en"># release.sh configuration for powerpc/powerpc64
CHROOTDIR="/scratch-powerpc64"
TARGET="powerpc"
TARGET_ARCH="powerpc64"
KERNEL="GENERIC64"</programlisting>

      <para xml:lang="en">Then invoke <filename>src/release/release.sh</filename>
	as:</para>

      <screen xml:lang="en"><prompt>#</prompt> <userinput>/bin/sh /usr/src/release/release.sh -c <replaceable>$HOME/release.conf</replaceable></userinput></screen>

      <para xml:lang="en">See <citerefentry><refentrytitle>release</refentrytitle><manvolnum>7</manvolnum></citerefentry> and
	<filename>src/release/release.conf.sample</filename> for more
	details and example usage.</para>
    </sect3>

    <sect3 xml:id="releng-build-scripts-multiple">
      <title xml:lang="en">The <filename>thermite.sh</filename> Wrapper
	Script</title>

      <para xml:lang="en">In order to make cross building the full set of
	architectures supported on a given branch faster, easier, and
	reduce human error factors, a wrapper script around
	<filename>src/release/release.sh</filename> was written to
	iterate through the various combinations of architectures and
	invoke <filename>src/release/release.sh</filename> using
	a configuration file specific to that architecture.</para>

      <para xml:lang="en">The wrapper script is called
	<filename>thermite.sh</filename>, which is available in the
	FreeBSD Subversion repository at
	<literal>svn://svn.freebsd.org/base/user/gjb/thermite/</literal>,
	in addition to configuration files used to build
	<literal>head/</literal> and <literal>stable/<replaceable>12</replaceable>/</literal> development
	snapshots.</para>

      <para xml:lang="en">Using <filename>thermite.sh</filename> is covered in <xref linkend="releng-build-snapshot"/> and <xref linkend="releng-build-release"/>.</para>

      <para xml:lang="en">Each architecture and individual kernel have their own
	configuration file used by <filename>release.sh</filename>.
	Each branch has its own <filename>defaults-X.conf</filename>
	configuration which contains entries common throughout each
	architecture, where overrides or special variables are set
	and/or overridden in the per-build files.</para>

      <para xml:lang="en">The per-build configuration file naming scheme is in the
	form of
	<filename>${revision}-${TARGET_ARCH}-${KERNCONF}-${type}.conf</filename>,
	where the uppercase variables are equivalent to what
	<citerefentry><refentrytitle>make</refentrytitle><manvolnum>1</manvolnum></citerefentry> uses in the build system, and lowercase variables
	are set within the configuration files, mapping to the major
	version of the respective branch.</para>

      <para xml:lang="en">Each branch also has its own
	<filename>builds-X.conf</filename> configuration, which is
	used by <filename>thermite.sh</filename>.  The
	<filename>thermite.sh</filename> script iterates through each
	${revision}, ${TARGET_ARCH},
	${KERNCONF}, and ${type} value, creating
	a master list of what to build.  However, a given
	combination from the list will only be built if the
	respective configuration file exists, which is where the
	naming scheme above is relevant.</para>

      <para xml:lang="en">There are two paths of file sourcing:</para>

      <itemizedlist>
	<listitem>
	  <para xml:lang="en"><filename>builds-<replaceable>12</replaceable>.conf</filename>
	    -&gt; <filename>main.conf</filename></para>
	  <para xml:lang="en">This controls <filename>thermite.sh</filename>
	    behavior</para>
	</listitem>

	<listitem>
	  <para xml:lang="en"><filename><replaceable>12</replaceable>-<replaceable>amd64</replaceable>-<replaceable>GENERIC</replaceable>-<replaceable>snap</replaceable>.conf</filename>
	    -&gt;
	    <filename>defaults-<replaceable>12</replaceable>.conf</filename>
	    -&gt; <filename>main.conf</filename></para>
	  <para xml:lang="en">This controls <filename>release/release.sh</filename>
	    behavior within the build <citerefentry><refentrytitle>chroot</refentrytitle><manvolnum>8</manvolnum></citerefentry></para>
	</listitem>
      </itemizedlist>

      <note>
	<para xml:lang="en">The
	  <filename>builds-<replaceable>12</replaceable>.conf</filename>,
	  <filename>defaults-<replaceable>12</replaceable>.conf</filename>,
	  and <filename>main.conf</filename> configuration files exist
	  to reduce repetition between the various per-build
	  files.</para>
      </note>
    </sect3>
  </sect2>

  <sect2 xml:id="releng-build-snapshot">
    <title xml:lang="en">Building FreeBSD Development Snapshots</title>

    <para xml:lang="en">The official release build machines have a specific
      filesystem layout, which using <acronym>ZFS</acronym>,
      <filename>thermite.sh</filename> takes heavy advantage of with
      clones and snapshots, ensuring a pristine build
      environment.</para>

    <para xml:lang="en">The build scripts reside in <filename class="directory">/releng/scripts-snapshot/scripts</filename>
      or <filename class="directory">/releng/scripts-release/scripts</filename>
      respectively, to avoid collisions between an
      <literal>RC</literal> build from a releng branch versus
      a <literal>STABLE</literal> snapshot from the respective stable
      branch.</para>

    <para xml:lang="en">A separate dataset exists for the final build images,
      <filename class="directory">/snap/ftp</filename>.  This
      directory contains both snapshots and releases directories.
      They are only used if the <literal>EVERYTHINGISFINE</literal>
      variable is defined in <filename>main.conf</filename>.</para>

    <note>
      <para xml:lang="en">The <literal>EVERYTHINGISFINE</literal> variable name was
	chosen to avoid colliding with a variable that might be
	possibly set in the user environment, accidentally enabling
	the behavior that depends on it being defined.</para>
    </note>

    <para xml:lang="en">As <filename>thermite.sh</filename> iterates through the
      master list of combinations and locates the per-build
      configuration file, a <acronym>ZFS</acronym> dataset is created
      under <filename class="directory">/releng</filename>, such as
      <filename class="directory">/releng/12-amd64-GENERIC-snap</filename>.
      The <literal>src/</literal>, <literal>ports/</literal>, and
      <literal>doc/</literal> trees are checked out to separate
      <acronym>ZFS</acronym> datasets, such as <filename class="directory">/releng/12-src-snap</filename>, which are
      then cloned and mounted into the respective build datasets.
      This is done to avoid checking out a given tree more than
      once.</para>

    <para xml:lang="en">Assuming these filesystem paths,
      <filename>thermite.sh</filename> would be invoked as:</para>

    <screen xml:lang="en"><prompt>#</prompt> <userinput>cd /releng/scripts-snapshot/scripts</userinput>
<prompt>#</prompt> <userinput>./setrev.sh -b <literal>stable/<replaceable>12</replaceable>/</literal></userinput>
<prompt>#</prompt> <userinput>./zfs-setup.sh -c ./builds-<replaceable>12</replaceable>.conf</userinput>
<prompt>#</prompt> <userinput>./thermite.sh -c ./builds-<replaceable>12</replaceable>.conf</userinput></screen>

    <para xml:lang="en">Once the builds have completed, additional helper scripts
      are available to generate development snapshot emails which are
      sent to the <literal>freebsd-snapshots@freebsd.org</literal>
      mailing list:</para>

    <screen xml:lang="en"><prompt>#</prompt> <userinput>cd /releng/scripts-snapshot/scripts</userinput>
<prompt>#</prompt> <userinput>./get-checksums.sh -c ./builds-<replaceable>12</replaceable>.conf | ./generate-email.pl &gt; snapshot-<replaceable>12</replaceable>-mail</userinput></screen>

    <note>
      <para xml:lang="en">The generated output should be double-checked for
	correctness, and the email itself should be PGP signed,
	in-line.</para>
    </note>

    <note>
      <para xml:lang="en">These helper scripts only apply to development snapshot
	builds.  Announcements during the release cycle (excluding the
	final release announcement) are created from an email
	template.  A sample of the email template currently used can
	be found <link xlink:href="https://svn.freebsd.org/base/user/gjb/thermite/non-release-template-mail.txt">here</link>.</para>
    </note>
  </sect2>

  <sect2 xml:id="releng-build-release">
    <title xml:lang="en">Building FreeBSD Releases</title>

    <para xml:lang="en">Similar to building FreeBSD development snapshots,
      <filename>thermite.sh</filename> would be invoked the same way.
      The difference between development snapshots and release builds,
      <literal>BETA</literal> and <literal>RC</literal> included, is
      that the <citerefentry><refentrytitle>chroot</refentrytitle><manvolnum>8</manvolnum></citerefentry> configuration files must be named with
      <literal>release</literal> instead of <literal>snap</literal> as
      the "type", as mentioned above.</para>

    <para xml:lang="en">In addition, the <literal>BUILDTYPE</literal> and
      <literal>types</literal> must be changed from
      <literal>snap</literal> to <literal>release</literal> in
      <filename>defaults-<replaceable>12</replaceable>.conf</filename>
      and
      <filename>builds-<replaceable>12</replaceable>.conf</filename>,
      respectively.</para>

    <para xml:lang="en">When building <literal>BETA</literal>,
      <literal>RC</literal>, and the final <literal>RELEASE</literal>,
      also statically set <literal>BUILDSVNREV</literal> to the
      revision on the branch reflecting the name change,
      <literal>BUILDDATE</literal> to the date the builds are started
      in <literal>YYYYMMDD</literal> format.  If the
      <literal>doc/</literal> and <literal>ports/</literal> trees have
      been tagged, also set <literal>PORTBRANCH</literal> and
      <literal>DOCBRANCH</literal> to the relevant tag path in the
      Subversion repository, replacing <literal>HEAD</literal> with
      the last changed revision.  Also set
      <literal>releasesrc</literal> in
      <filename>builds-<replaceable>12</replaceable>.conf</filename>
      to the relevant branch, such as <literal>stable/<replaceable>12</replaceable>/</literal> or
      <literal>releng/<replaceable>12.0</replaceable>/</literal>.</para>

    <para xml:lang="en">During the release cycle, a copy of
      <filename>CHECKSUM.SHA512</filename> and
      <filename>CHECKSUM.SHA256</filename> for each architecture are
      stored in the FreeBSD Release Engineering Team internal repository in addition to being
      included in the various announcement emails.  Each
      <filename>MANIFEST</filename> containing the hashes of
      <filename>base.txz</filename>, <filename>kernel.txz</filename>,
      etc. are added to
      <package>misc/freebsd-release-manifests</package> in the Ports
      Collection, as well.</para>

    <para xml:lang="en">After building the final <literal>RELEASE</literal>, the
      <literal>releng/<replaceable>12.0</replaceable>/</literal> branch is tagged as <literal>release/<replaceable>12.0.0</replaceable>/</literal> using the
      revision from which the <literal>RELEASE</literal> was built.
      Similar to creating the <literal>stable/<replaceable>12</replaceable>/</literal> and <literal>releng/<replaceable>12.0</replaceable>/</literal>
      branches, this is done with <command>svn cp</command>.  From the
      repository root:</para>

    <screen xml:lang="en"><prompt>%</prompt> <userinput>svn cp ^/<literal>releng/<replaceable>12.0</replaceable>/</literal>@r<replaceable>306420</replaceable> <literal>release/<replaceable>12.0.0</replaceable>/</literal></userinput>
<prompt>%</prompt> <userinput>svn commit <literal>release/<replaceable>12.0.0</replaceable>/</literal></userinput></screen>
  </sect2>
</sect1>

  
<!--
     The FreeBSD Documentation Project

     $FreeBSD: head/en_US.ISO8859-1/articles/freebsd-releng/releng-mirrors.xml 50838 2017-09-14 20:04:12Z gjb $
-->
<sect1 xml:id="releng-mirrors">
  <title xml:lang="en">Publishing FreeBSD Installation Media to Project Mirrors</title>

  <para xml:lang="en">This section describes the procedure to publish FreeBSD
    development snapshots and releases to the Project mirrors.</para>

  <sect2 xml:id="releng-mirrors-staging">
    <title xml:lang="en">Staging FreeBSD Installation Media Images</title>

    <para xml:lang="en">Staging FreeBSD snapshots and releases is a two part
      process:</para>

    <itemizedlist>
      <listitem>
	<para xml:lang="en">Creating the directory structure to match the hierarchy
	  on <systemitem>ftp-master</systemitem></para>

	<para xml:lang="en">If <literal>EVERYTHINGISFINE</literal> is defined in the
	  build configuration files, <filename>main.conf</filename> in
	  the case of the build scripts referenced above, this happens
	  automatically in the <citerefentry><refentrytitle>chroot</refentrytitle><manvolnum>8</manvolnum></citerefentry> after the build is
	  complete, creating the directory structure in <filename class="directory">${DESTDIR}/R/ftp-stage</filename>
	  with a path structure matching what is expected on
	  <systemitem>ftp-master</systemitem>.  This is equivalent to
	  running the following in the <citerefentry><refentrytitle>chroot</refentrytitle><manvolnum>8</manvolnum></citerefentry> directly:</para>

	<screen xml:lang="en"><prompt>#</prompt> <userinput>make -C /usr/src/release -f Makefile.mirrors EVERYTHINGISFINE=1 ftp-stage</userinput></screen>

	<para xml:lang="en">After each architecture is built,
	  <filename>thermite.sh</filename> will
	  <application>rsync</application> the <filename class="directory">${DESTDIR}/R/ftp-stage</filename>
	  from the build <citerefentry><refentrytitle>chroot</refentrytitle><manvolnum>8</manvolnum></citerefentry> to <filename class="directory">/snap/ftp/snapshots</filename> or
	  <filename class="directory">/snap/ftp/releases</filename> on
	  the build host, respectively.</para>
      </listitem>

      <listitem>
	<para xml:lang="en">Copying the files to a staging directory on
	  <systemitem>ftp-master</systemitem> before moving the files
	  into <filename class="directory">pub/</filename> to begin
	  propagation to the Project mirrors</para>

	<para xml:lang="en">Once all builds have finished, <filename class="directory">/snap/ftp/snapshots</filename>, or
	  <filename class="directory">/snap/ftp/releases</filename>
	  for a release, is polled by
	  <systemitem>ftp-master</systemitem> using
	  <application>rsync</application> to <filename class="directory">/archive/tmp/snapshots</filename> or
	  <filename class="directory">/archive/tmp/releases</filename>,
	  respectively.</para>

	<note>
	  <para xml:lang="en">On <systemitem>ftp-master</systemitem> in the FreeBSD
	    Project infrastructure, this step requires
	    <literal>root</literal> level access, as this step must
	    be executed as the <literal>archive</literal> user.</para>
	</note>
      </listitem>
    </itemizedlist>
  </sect2>

  <sect2 xml:id="releng-mirrors-publishing">
    <title xml:lang="en">Publishing FreeBSD Installation Media</title>

    <para xml:lang="en">Once the images are staged in <filename class="directory">/archive/tmp/</filename>, they are ready to
      be made public by putting them in <filename class="directory">/archive/pub/FreeBSD</filename>.  In order
      to reduce propagation time, <citerefentry><refentrytitle>pax</refentrytitle><manvolnum>1</manvolnum></citerefentry> is used to create hard
      links from <filename class="directory">/archive/tmp</filename>
      to <filename class="directory">/archive/pub/FreeBSD</filename>.</para>

    <note>
      <para xml:lang="en">In order for this to be effective, both <filename class="directory">/archive/tmp</filename> and <filename class="directory">/archive/pub</filename> must reside on the
	same logical filesystem.</para>
    </note>

    <para xml:lang="en">There is a caveat, however, where
      <application>rsync</application> must be used after <citerefentry><refentrytitle>pax</refentrytitle><manvolnum>1</manvolnum></citerefentry>
      in order to correct the symbolic links in <filename class="directory">pub/FreeBSD/<replaceable>snapshots</replaceable>/ISO-IMAGES</filename>
      which <citerefentry><refentrytitle>pax</refentrytitle><manvolnum>1</manvolnum></citerefentry> will replace with a hard link, increasing the
      propagation time.</para>

    <note>
      <para xml:lang="en">As with the staging steps, this requires
	<literal>root</literal> level access, as this step must be
	executed as the <literal>archive</literal> user.</para>
    </note>

    <para xml:lang="en">As the <literal>archive</literal> user:</para>

    <screen xml:lang="en"><prompt>%</prompt> <userinput>cd /archive/tmp/<replaceable>snapshots</replaceable></userinput>
<prompt>%</prompt> <userinput>pax -r -w -l . /archive/pub/FreeBSD/<replaceable>snapshots</replaceable></userinput>
<prompt>%</prompt> <userinput>/usr/local/bin/rsync -avH /archive/tmp/<replaceable>snapshots</replaceable>/* /archive/pub/FreeBSD/<replaceable>snapshots</replaceable>/</userinput></screen>

    <para xml:lang="en">Replace <replaceable>snapshots</replaceable> with
      <replaceable>releases</replaceable> as appropriate.</para>
  </sect2>
</sect1>


  <sect1 xml:id="releng-wrapup">
    <title xml:lang="en">Wrapping up the Release Cycle</title>

    <para xml:lang="en">This section describes general post-release tasks.</para>

    <sect2 xml:id="releng-wrapup-en">
      <title xml:lang="en">Post-Release Errata Notices</title>

      <para xml:lang="en">As the release cycle approaches conclusion, it is common
	to have several <acronym>EN</acronym> (Errata Notice)
	candidates to address issues that were discovered late in the
	cycle.  Following the release, the FreeBSD Release Engineering Team and the
	FreeBSD Security Team revisit changes that were not approved prior to
	the final release, and depending on the scope of the change in
	question, may issue an <acronym>EN</acronym>.</para>

      <note>
	<para xml:lang="en">The actual process of issuing <acronym>EN</acronym>s is
	  handled by the FreeBSD Security Team.</para>
      </note>
    </sect2>

    <sect2 xml:id="releng-wrapup-handoff">
      <title xml:lang="en">Handoff to the FreeBSD Security Team</title>

      <para xml:lang="en">Roughly two weeks following the release, the Release
	Engineer updates <filename>svnadmin/conf/approvers</filename>
	changing the approver column from <literal>re</literal> to
	<literal>(so|security-officer)</literal> for the
	<literal>releng/<replaceable>12.0</replaceable>/</literal> branch.</para>
    </sect2>
  </sect1>

</article>
